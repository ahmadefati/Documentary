// Top-level build file where you can add configuration options common to all sub-projects/modules.
import com.documentary.buildsrc.Libs
import com.documentary.buildsrc.Versions

buildscript {
    ext {
        kotlin_version = '1.4.10'
    }
    ext.buildConfig = [
            'compileSdk': 30,
            'minSdk'    : 23,
            'targetSdk' : 30,
    ]

    repositories {
        google()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath Libs.androidGradlePlugin
        classpath Libs.Kotlin.gradlePlugin
        classpath Libs.Kotlin.extensions
        classpath Libs.AndroidX.Navigation.safeArgs
        classpath Libs.Hilt.gradlePlugin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }

}

plugins {
    id 'com.diffplug.spotless' version '5.6.1'
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

subprojects {
    configurations.configureEach {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def group = details.requested.group
            def module = details.requested.module.name

            if (group == 'org.jetbrains.kotlin' && module == 'kotlin-stdlib-jre7') {
                // kotlin-stdlib-jre7 no longer exists in 1.4, so we force the
                // kotlin-stdlib module instead
                details.useTarget Libs.Kotlin.stdlib
            }
        }
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint(Versions.ktlint)
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = false

            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xopt-in=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xopt-in=kotlin.Experimental"

            freeCompilerArgs += "-Xallow-jvm-ir-dependencies"

            // Set JVM target to 1.8
            jvmTarget = "1.8"
        }
    }
}

Object propOrDef(String propertyName, Object defaultValue) {
    def propertyValue = project.properties[propertyName]
    return propertyValue != null ? propertyValue : defaultValue
}

/*
buildscript {
    ext.kotlin_version = "1.3.72"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}*/
