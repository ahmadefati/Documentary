import com.documentary.buildsrc.Libs

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

kapt {
    correctErrorTypes = true
    useBuildCache = true
}
def appVersionCode = propOrDef("tivi.versioncode", 17) as Integer
println("APK version code: " + appVersionCode)

def useReleaseKeystore = rootProject.file("release/app-release.jks").exists()

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "com.documentary.app"
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode appVersionCode
        versionName "1.0.0"
        // For now we're sticking to just shipping EN
        resConfigs "en"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        // Disable lintVital. Not needed since lint is run on CI
        checkReleaseBuilds false
        // Allow lint to check dependencies
        checkDependencies true
        // Ignore any tests
        ignoreTestSources true

        // TODO: remove this once https://issuetracker.google.com/issues/159733104 is fixed
        abortOnError false

        // Lint doesn't seem to handle Kotlin int types + string format very well
        disable 'StringFormatMatches'
        // Seems to be broken in 4.0.0-alpha09 https://issuetracker.google.com/issues/148172219
        disable 'Instantiatable'

    }

    buildFeatures {
        // We need to keep this enabled because submodules use it
        dataBinding true

        viewBinding true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    packagingOptions {
        // Exclude AndroidX version files
        exclude 'META-INF/*.version'
        // Exclude consumer proguard files
        exclude 'META-INF/proguard/*'
        // Exclude the Firebase/Fabric/other random properties files
        exclude '/*.properties'
        exclude 'fabric/*.properties'
        exclude 'META-INF/*.properties'
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            versionNameSuffix "-dev"
            applicationIdSuffix ".debug"
        }

        release {
            if (useReleaseKeystore) {
                signingConfig signingConfigs.release
            } else {
                // Otherwise just use the debug keystore (this is mainly for PR CI builds)
                signingConfig signingConfigs.debug
            }
            shrinkResources true
            minifyEnabled true
            proguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }


    flavorDimensions "mod"
    productFlavors {
        webApi {
            dimension "mod"
        }
        mock {
            dimension "mod"
        }
    }

}

dependencies {
    implementation project(':base')
    implementation project(':data')
    implementation project(':domain')
    implementation project(':common-ui-view')
    implementation project(':common-ui-res')
    implementation project(':home_feature')
    implementation project(':common-databinding')
    implementation project(':repo-feature')
    implementation project(':notification_feature')


    implementation Libs.Hilt.library
    kapt Libs.Hilt.compiler
    implementation Libs.AndroidX.Hilt.viewmodel
    kapt Libs.AndroidX.Hilt.compiler

    // MPAndroid Chart
    implementation Libs.MPAAndroidCharts
    implementation Libs.Log.stetho
    kapt Libs.Moshi.moshiCodegen
    implementation Libs.Moshi.moshi
}

android.applicationVariants.all { variant ->
    task "open${variant.name.capitalize()}" {
        dependsOn "install${variant.name.capitalize()}"

        doLast {
            exec {
                commandLine "adb shell monkey -p ${variant.applicationId} -c android.intent.category.LAUNCHER 1".split(" ")
            }
        }
    }
}

